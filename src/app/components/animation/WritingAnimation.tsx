import { useEffect, useState } from 'react';
import './animation.css';

interface AnimationProps {
  onLoad: () => void;
}

const WritingAnimation: React.FC<AnimationProps> = ({ onLoad }) => {
  const masks = ['w', 'h', 'o', 'c', 'ares'];
  const [animationEnded, setAnimationEnded] = useState(false);

  useEffect(() => {
    masks.forEach((letter) => {
      const id = `#mask-${letter}`;
      let path = document.querySelector(id) as SVGPathElement;
      if (path) {
        const length = path.getTotalLength();
        path.style.strokeDasharray = JSON.stringify(length);
        path.style.strokeDashoffset = JSON.stringify(length);
      }
    });

    const lastPath = document.querySelector('#mask-ares') as SVGPathElement;

    if (lastPath) {
      const animationEndHandler = () => {
        console.log(`Animation ended for #mask-ares`);
        setAnimationEnded(true);
      };

      lastPath.addEventListener('animationend', animationEndHandler);

      return () => {
        lastPath.removeEventListener('animationend', animationEndHandler);
      };
    }
  }, []);

  useEffect(() => {
    if (animationEnded) {
      onLoad();
    }
  }, [animationEnded]);

  return (
    <div>
      <svg
        className='who-cares'
        width='895'
        height='209'
        viewBox='0 0 895 209'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <defs>
          <mask id='mask-who-w'>
            <path
              className='mask'
              id='mask-w'
              d='M3.82965 32.3064C8.85779 56.4415 15.3018 80.1982 19.6721 104.478C20.3889 108.46 20.4747 133.128 25.5397 126.188C40.7717 105.314 49.0049 76.3387 53.9974 51.376C55.349 44.618 56.4288 37.7369 56.6378 30.8395C56.7321 27.727 57.9339 46.0739 58.1047 47.5621C61.2763 75.2005 64.2796 104.69 75.1206 130.588C83.0624 149.56 95.3201 140.574 102.552 125.307C120.96 86.4451 117.401 40.2949 98.8843 3.26196'
            />
          </mask>
          <mask id='mask-who-h'>
            <path
              className='mask'
              id='mask-h'
              d='M127.929 13.8236C129.125 44.3281 135.85 135.592 135.85 105.064C135.85 89.0687 138.744 72.7281 151.692 61.9377C185.165 34.0437 192.987 91.6074 204.501 108.878'
            />
          </mask>
          <mask id='mask-who-o'>
            <path
              className='mask'
              id='mask-o'
              d='M241.466 66.6318C222.422 70.4406 224.626 138.37 262.003 100.37C269.735 92.5088 283.103 63.0448 263.763 61.4976C251.965 60.5538 244.053 63.1292 233.545 66.6318'
            />
          </mask>
          <mask id='mask-cares-c'>
            <path
              className='mask'
              id='mask-c'
              d='M391.969 21.7448C381.364 20.5665 374.858 10.6 362.338 14.4104C347.391 18.9596 344.218 44.8863 341.802 57.2436C335.851 87.6753 333.884 121.224 338.281 152.005C344.827 197.822 392.79 230.089 422.481 181.049C428.918 170.417 454.019 111.078 431.576 103.597'
            />
          </mask>
          <mask id='mask-cares-ares'>
            <path
              className='mask'
              id='mask-ares'
              d='M513.428 66.6318C503.581 66.6318 487.698 63.4599 479.103 68.5387C459.811 79.9388 463.302 134.231 490.691 132.202C511.773 130.64 521.13 99.2176 525.457 83.3543C528.138 73.5233 530.383 83.5178 533.671 87.9017C539.435 95.5861 549.82 102.445 558.609 95.6762C573.026 84.5708 576.798 77.7985 576.798 61.6443C576.798 53.318 577.481 55.3762 580.025 63.1112C584.816 77.6749 589.123 92.4768 593.667 107.118C601.044 130.887 593.472 103.602 592.787 94.356C590.581 64.5717 629.364 53.4297 653.076 53.4297C669.409 53.4297 692.558 58.158 706.765 50.2026C714.363 45.9477 720.864 31.5385 708.232 29.9594C693.186 28.0788 679.538 33.2478 670.386 45.5085C631.114 98.1183 726.753 124.598 761.773 97.5832C776.281 86.3911 773.876 68.8756 790.818 58.7105C811.62 46.229 829.221 37.5873 853.454 37.5873C871.464 37.5873 811.003 33.0387 800.352 47.5621C773.035 84.8138 832.463 95.4326 856.094 95.6762C873.898 95.8598 886.504 98.7713 890.273 118.56C895.427 145.619 877.623 152.869 856.681 161.686'
            />
          </mask>
        </defs>
        <path
          d='M3.82965 32.3064C8.85779 56.4415 15.3018 80.1982 19.6721 104.478C20.3889 108.46 20.4747 133.128 25.5397 126.188C40.7717 105.314 49.0049 76.3387 53.9974 51.376C55.349 44.618 56.4288 37.7369 56.6378 30.8395C56.7321 27.727 57.9339 46.0739 58.1047 47.5621C61.2763 75.2005 64.2796 104.69 75.1206 130.588C83.0624 149.56 95.3201 140.574 102.552 125.307C120.96 86.4451 117.401 40.2949 98.8843 3.26196'
          stroke='#0000EE'
          strokeWidth='6'
          strokeLinecap='round'
          mask='url(#mask-who-w)'
        />
        <path
          d='M127.929 13.8236C129.125 44.3281 135.85 135.592 135.85 105.064C135.85 89.0687 138.744 72.7281 151.692 61.9377C185.165 34.0437 192.987 91.6074 204.501 108.878'
          stroke='#0000EE'
          strokeWidth='6'
          strokeLinecap='round'
          mask='url(#mask-who-h)'
        />
        <path
          d='M241.466 66.6318C222.422 70.4406 224.626 138.37 262.003 100.37C269.735 92.5088 283.103 63.0448 263.763 61.4976C251.965 60.5538 244.053 63.1292 233.545 66.6318'
          stroke='#0000EE'
          strokeWidth='6'
          strokeLinecap='round'
          mask='url(#mask-who-o)'
        />
        <path
          d='M391.969 21.7448C381.364 20.5665 374.858 10.6 362.338 14.4104C347.391 18.9596 344.218 44.8863 341.802 57.2436C335.851 87.6753 333.884 121.224 338.281 152.005C344.827 197.822 392.79 230.089 422.481 181.049C428.918 170.417 454.019 111.078 431.576 103.597'
          stroke='#0000EE'
          strokeWidth='6'
          strokeLinecap='round'
          mask='url(#mask-cares-c)'
        />
        <path
          d='M513.428 66.6318C503.581 66.6318 487.698 63.4599 479.103 68.5387C459.811 79.9388 463.302 134.231 490.691 132.202C511.773 130.64 521.13 99.2176 525.457 83.3543C528.138 73.5233 530.383 83.5178 533.671 87.9017C539.435 95.5861 549.82 102.445 558.609 95.6762C573.026 84.5708 576.798 77.7985 576.798 61.6443C576.798 53.318 577.481 55.3762 580.025 63.1112C584.816 77.6749 589.123 92.4768 593.667 107.118C601.044 130.887 593.472 103.602 592.787 94.356C590.581 64.5717 629.364 53.4297 653.076 53.4297C669.409 53.4297 692.558 58.158 706.765 50.2026C714.363 45.9477 720.864 31.5385 708.232 29.9594C693.186 28.0788 679.538 33.2478 670.386 45.5085C631.114 98.1183 726.753 124.598 761.773 97.5832C776.281 86.3911 773.876 68.8756 790.818 58.7105C811.62 46.229 829.221 37.5873 853.454 37.5873C871.464 37.5873 811.003 33.0387 800.352 47.5621C773.035 84.8138 832.463 95.4326 856.094 95.6762C873.898 95.8598 886.504 98.7713 890.273 118.56C895.427 145.619 877.623 152.869 856.681 161.686'
          stroke='#0000EE'
          strokeWidth='6'
          strokeLinecap='round'
          mask='url(#mask-cares-ares)'
        />
      </svg>
    </div>
  );
};

export default WritingAnimation;
